#!/usr/bin/python

from __future__ import print_function
import getopt
import sys
import os

import osgbuild.main  # import needed for logging

from osgbuild.fetch_sources import C, process_dot_source
from osgbuild.error import Error

def usage():
    print("Usage: {script} [-d destdir] [-n] [-s] upstream.source [...]\n\n"
          "Options:\n"
          "  -d destdir   specify output location\n"
          "  -n           do not require matching hashes (nocheck)\n"
          "  -s           extract rpm spec from git sources (want_spec)"
          .format(script=os.path.basename(__file__)))
    sys.exit(0)

options = dict(
    cache_prefix = C.WEB_CACHE_PREFIX,
    destdir = '.',
    nocheck = False,
    want_spec = False
)

try:
    ops, dot_sources = getopt.getopt(sys.argv[1:], 'd:ns')
except getopt.GetoptError:
    usage()

if not dot_sources:
    usage()

for op,val in ops:
    if   op == '-n': options['nocheck'] = True
    elif op == '-s': options['want_spec'] = True
    elif op == '-d': options['destdir'] = val

def main():
    for src in dot_sources:
        files = process_dot_source(sfilename=src, **options)
        for f in files:
            print(f)

try:
    main()
except SystemExit as err:
    raise
except KeyboardInterrupt:
    print("-" * 79, file=sys.stderr)
    print("Interrupted", file=sys.stderr)
    print("-" * 79, file=sys.stderr)
    sys.exit(3)
except Error as err:
    print("-" * 79, file=sys.stderr)
    print(err, file=sys.stderr)
    print("-" * 79, file=sys.stderr)
    sys.exit(4)
except Exception as err:
    print("-" * 79, file=sys.stderr)
    print("Unhandled exception:", file=sys.stderr)
    print(err, file=sys.stderr)
    print("-" * 79, file=sys.stderr)
    sys.exit(1)

